{"remainingRequest":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/babel-loader/lib/index.js!/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oehlers/Documents/Schule/m291/M291_Code-main/04a_Routing-Advanced/01_Intro/src/views/Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/04a_Routing-Advanced/01_Intro/src/views/Message.vue","mtime":1654961602085},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/babel.config.js","mtime":1649802216000},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js","mtime":1654962773267},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/babel-loader/lib/index.js","mtime":1654962773230},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js","mtime":1654962773267},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/vue-loader/lib/index.js","mtime":1649837313021}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYXBwJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3R1ZGVudDE6IDEwMCwKICAgICAgc3R1ZGVudDI6IDEwMSwKICAgICAgbW9kdWxlTGlzdDogW10sCiAgICAgIGF2ZzogMAogICAgfTsKICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMubW9kdWxlTGlzdCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0QnlTdHVkZW50SWQodGhpcy5zdHVkZW50Mik7CiAgICB0aGlzLmF2ZyA9IHRoaXMuZ2V0QXZnKHRoaXMuc3R1ZGVudDIpOwogICAgY29uc29sZS5sb2coImJlZm9yZU1vdW50OiAiLmNvbmNhdCh0aGlzLmF2ZykpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QXZnOiBmdW5jdGlvbiBnZXRBdmcoc2lkKSB7CiAgICAgIHZhciBzdW0gPSAwLAogICAgICAgICAgY291bnQgPSAwOwogICAgICB0aGlzLm1vZHVsZUxpc3QuZm9yRWFjaChmdW5jdGlvbiAobW9kKSB7CiAgICAgICAgaWYgKG1vZC5zaWQgPT09IHNpZCkgewogICAgICAgICAgaWYgKG1vZC5tYXJrICE9PSAnUG5hYicpIHsKICAgICAgICAgICAgc3VtICs9IE51bWJlcihtb2QubWFyayk7CiAgICAgICAgICAgIGNvdW50Kys7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coIiIuY29uY2F0KHN1bSwgIiAiKS5jb25jYXQoY291bnQpKTsgLy9BdWYgZ2FuemUgcmVzcC4gaGFsYmUgTm90ZW4gZ2VydW5kZXQ6CgogICAgICByZXR1cm4gTnVtYmVyKChNYXRoLnJvdW5kKHN1bSAvIGNvdW50IC8gLjUpICogLjUpLnRvRml4ZWQoMikpOwogICAgfSwKICAgIHNldE1hcms6IGZ1bmN0aW9uIHNldE1hcmsoc2lkLCBtaWQsIG1hcmspIHsKICAgICAgY29uc29sZS5sb2coImJlZm9yZSBpZjogIi5jb25jYXQoc2lkLCAiICIpLmNvbmNhdChtaWQsICIgIikuY29uY2F0KG1hcmspKTsKICAgICAgdGhpcy5hdmcgPSB0aGlzLmdldEF2Zyh0aGlzLnN0dWRlbnQyKTsKCiAgICAgIGlmIChtYXJrKSB7CiAgICAgICAgY29uc29sZS5sb2coImluIGlmOiAiLmNvbmNhdChzaWQsICIgIikuY29uY2F0KG1pZCwgIiAiKS5jb25jYXQobWFyaykpOwogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlTWFyaycsIHRoaXMubW9kdWxlTGlzdCk7CiAgICAgIH0KICAgIH0sCiAgICBpbmZvY2FyZDogZnVuY3Rpb24gaW5mb2NhcmQoc2lkKSB7CiAgICAgIHJldHVybiAiTW9kdWxlIFN0dWRlbnQgaWQ9Ii5jb25jYXQoc2lkKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACAA,aADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,mBAFA;AAGAC,oBAHA;AAIAC;AAJA;AAMA,GATA;AAUAC,aAVA,yBAUA;AACA;AACA;AACAC;AACA,GAdA;AAeAC;AACAC,UADA,kBACAC,GADA,EACA;AACA;AAAA;AACA;AACA;AACA;AACAC;AACAC;AACA;AACA;AACA,OAPA;AAQAL,qDAVA,CAWA;;AACA;AACA,KAdA;AAeAM,WAfA,mBAeAH,GAfA,EAeAI,GAfA,EAeAC,IAfA,EAeA;AACAR;AACA;;AACA;AACAA;AACA;AACA;AACA,KAtBA;AAuBAS,YAvBA,oBAuBAN,GAvBA,EAuBA;AACA;AACA;AAzBA;AAfA","names":["name","data","student1","student2","moduleList","avg","beforeMount","console","methods","getAvg","sid","sum","count","setMark","mid","mark","infocard"],"sourceRoot":"04a_Routing-Advanced/01_Intro/src/views","sources":["Message.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container fluid>\n      <b-card\n          :title=\"this.infocard(this.student2)\"\n          img-src=\"https://picsum.photos/300/150/?image=1027\"\n          img-alt=\"Image\"\n          img-top\n          tag=\"article\"\n          style=\"max-width: 50rem;\"\n          class=\"mb-n4\"\n      >\n        <b-card-text>\n          <b-row class=\"my-1\" v-for=\"(subject,i) in moduleList\" :key=\"i\">\n            <b-col sm=\"7\">\n              <label>{{ subject.title }}: </label>\n            </b-col>\n            <b-col sm=\"1\">\n              <label>{{ subject.mark}}</label>\n            </b-col>\n            <b-col sm=\"2\">\n              <b-form-input :id=\"`${subject.mid}`\" v-model:value=\"subject.mark\" ref=\"input\"\n                            @keyup.enter=\"setMark(subject.sid,subject.mid,subject.mark)\"></b-form-input>\n            </b-col>\n            <b-col sm=\"2\">\n              <b-button variant=\"primary\"\n                        @click=\"setMark(subject.sid,subject.mid, subject.mark)\">Update</b-button>\n            </b-col>\n          </b-row>\n          <h5>Durchschnitt {{ this.avg }}</h5>\n        </b-card-text>\n      </b-card>\n\n    </b-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app',\n  data() {\n    return {\n      student1: 100,\n      student2: 101,\n      moduleList: [],\n      avg: 0\n    }\n  },\n  beforeMount() {\n    this.moduleList = this.$store.getters.getByStudentId(this.student2);\n    this.avg = this.getAvg(this.student2);\n    console.log(`beforeMount: ${this.avg}`);\n  },\n  methods: {\n    getAvg(sid) {\n      let sum = 0, count = 0;\n      this.moduleList.forEach(mod => {\n        if (mod.sid === sid) {\n          if (mod.mark !== 'Pnab') {\n            sum += Number(mod.mark);\n            count++;\n          }\n        }\n      });\n      console.log(`${sum} ${count}`);\n      //Auf ganze resp. halbe Noten gerundet:\n      return Number((Math.round((sum / count) / .5) * .5).toFixed(2));\n    },\n    setMark(sid,mid,mark){\n      console.log(`before if: ${sid} ${mid} ${mark}`);\n      this.avg = this.getAvg(this.student2);\n      if (mark){\n        console.log(`in if: ${sid} ${mid} ${mark}`);\n        this.$store.commit('updateMark',this.moduleList);\n      }\n    },\n    infocard(sid){\n      return `Module Student id=${sid}`\n    }\n  }\n\n}\n</script>\n"]}]}