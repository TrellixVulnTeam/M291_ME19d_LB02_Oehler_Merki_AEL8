{"remainingRequest":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/babel-loader/lib/index.js!/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/oehlers/Documents/Schule/m291/M291_Code-main/Intranet_Demo/Code/src/views/Notendurschnitt.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/Intranet_Demo/Code/src/views/Notendurschnitt.vue","mtime":1656523773599},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/babel.config.js","mtime":1649802216000},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js","mtime":1654962773267},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/babel-loader/lib/index.js","mtime":1654962773230},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/cache-loader/dist/cjs.js","mtime":1654962773267},{"path":"/Users/oehlers/Documents/Schule/m291/M291_Code-main/node_modules/vue-loader/lib/index.js","mtime":1654962783980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2FwcCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0dWRlbnQxOiAxMDAsCiAgICAgIHN0dWRlbnQyOiAxMDEsCiAgICAgIG1vZHVsZUxpc3Q6IFtdLAogICAgICBhdmc6IDAKICAgIH07CiAgfSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICB0aGlzLm1vZHVsZUxpc3QgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEJ5U3R1ZGVudElkKHRoaXMuc3R1ZGVudDIpOwogICAgdGhpcy5hdmcgPSB0aGlzLmdldEF2Zyh0aGlzLnN0dWRlbnQyKTsKICAgIGNvbnNvbGUubG9nKCJiZWZvcmVNb3VudDogIi5jb25jYXQodGhpcy5hdmcpKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEF2ZzogZnVuY3Rpb24gZ2V0QXZnKHNpZCkgewogICAgICB2YXIgc3VtID0gMCwKICAgICAgICAgIGNvdW50ID0gMDsKICAgICAgdGhpcy5tb2R1bGVMaXN0LmZvckVhY2goZnVuY3Rpb24gKG1vZCkgewogICAgICAgIGlmIChtb2Quc2lkID09PSBzaWQpIHsKICAgICAgICAgIGlmIChtb2QubWFyayAhPT0gJ1BuYWInKSB7CiAgICAgICAgICAgIHN1bSArPSBOdW1iZXIobW9kLm1hcmspOwogICAgICAgICAgICBjb3VudCsrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKCIiLmNvbmNhdChzdW0sICIgIikuY29uY2F0KGNvdW50KSk7IC8vQXVmIGdhbnplIHJlc3AuIGhhbGJlIE5vdGVuIGdlcnVuZGV0OgoKICAgICAgcmV0dXJuIE51bWJlcigoTWF0aC5yb3VuZChzdW0gLyBjb3VudCAvIC41KSAqIC41KS50b0ZpeGVkKDIpKTsKICAgIH0sCiAgICBzZXRNYXJrOiBmdW5jdGlvbiBzZXRNYXJrKHNpZCwgbWlkLCBtYXJrKSB7CiAgICAgIGNvbnNvbGUubG9nKCJiZWZvcmUgaWY6ICIuY29uY2F0KHNpZCwgIiAiKS5jb25jYXQobWlkLCAiICIpLmNvbmNhdChtYXJrKSk7CiAgICAgIHRoaXMuYXZnID0gdGhpcy5nZXRBdmcodGhpcy5zdHVkZW50Mik7CgogICAgICBpZiAobWFyaykgewogICAgICAgIGNvbnNvbGUubG9nKCJpbiBpZjogIi5jb25jYXQoc2lkLCAiICIpLmNvbmNhdChtaWQsICIgIikuY29uY2F0KG1hcmspKTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZU1hcmsnLCB0aGlzLm1vZHVsZUxpc3QpOwogICAgICB9CiAgICB9LAogICAgaW5mb2NhcmQ6IGZ1bmN0aW9uIGluZm9jYXJkKHNpZCkgewogICAgICByZXR1cm4gIk1vZHVsZSBTdHVkZW50IGlkPSIuY29uY2F0KHNpZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACAA,aADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,mBAFA;AAGAC,oBAHA;AAIAC;AAJA;AAMA,GATA;AAUAC,aAVA,yBAUA;AACA;AACA;AACAC;AACA,GAdA;AAeAC;AACAC,UADA,kBACAC,GADA,EACA;AACA;AAAA;AACA;AACA;AACA;AACAC;AACAC;AACA;AACA;AACA,OAPA;AAQAL,qDAVA,CAWA;;AACA;AACA,KAdA;AAeAM,WAfA,mBAeAH,GAfA,EAeAI,GAfA,EAeAC,IAfA,EAeA;AACAR;AACA;;AACA;AACAA;AACA;AACA;AACA,KAtBA;AAuBAS,YAvBA,oBAuBAN,GAvBA,EAuBA;AACA;AACA;AAzBA;AAfA","names":["name","data","student1","student2","moduleList","avg","beforeMount","console","methods","getAvg","sid","sum","count","setMark","mid","mark","infocard"],"sourceRoot":"Intranet_Demo/Code/src/views","sources":["Notendurschnitt.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <b-container fluid>\n        <h1>{{this.infocard(this.student2)}}</h1>\n        <b-card-text>\n          <b-row class=\"my-1\" v-for=\"(subject,i) in moduleList\" :key=\"i\">\n            <b-col sm=\"7\">\n              <label>{{ subject.title }}: </label>\n            </b-col>\n            <b-col sm=\"1\">\n              <label>{{ subject.mark}}</label>\n            </b-col>\n            <b-col sm=\"2\">\n              <b-form-input :id=\"`${subject.mid}`\" v-model:value=\"subject.mark\" ref=\"input\"\n                            @keyup.enter=\"setMark(subject.sid,subject.mid,subject.mark)\"></b-form-input>\n            </b-col>\n            <b-col sm=\"2\">\n              <b-button variant=\"primary\"\n                        @click=\"setMark(subject.sid,subject.mid, subject.mark)\">Update</b-button>\n            </b-col>\n          </b-row>\n          <h5>Durchschnitt {{ this.avg }}</h5>\n        </b-card-text>\n      </b-card>\n\n    </b-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app',\n  data() {\n    return {\n      student1: 100,\n      student2: 101,\n      moduleList: [],\n      avg: 0\n    }\n  },\n  beforeMount() {\n    this.moduleList = this.$store.getters.getByStudentId(this.student2);\n    this.avg = this.getAvg(this.student2);\n    console.log(`beforeMount: ${this.avg}`);\n  },\n  methods: {\n    getAvg(sid) {\n      let sum = 0, count = 0;\n      this.moduleList.forEach(mod => {\n        if (mod.sid === sid) {\n          if (mod.mark !== 'Pnab') {\n            sum += Number(mod.mark);\n            count++;\n          }\n        }\n      });\n      console.log(`${sum} ${count}`);\n      //Auf ganze resp. halbe Noten gerundet:\n      return Number((Math.round((sum / count) / .5) * .5).toFixed(2));\n    },\n    setMark(sid,mid,mark){\n      console.log(`before if: ${sid} ${mid} ${mark}`);\n      this.avg = this.getAvg(this.student2);\n      if (mark){\n        console.log(`in if: ${sid} ${mid} ${mark}`);\n        this.$store.commit('updateMark',this.moduleList);\n      }\n    },\n    infocard(sid){\n      return `Module Student id=${sid}`\n    }\n  }\n}\n</script>\n"]}]}